@model WebApplication2.Models.publisher

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    if (ViewBag.Message != null)
    {
        <script type="text/javascript">

            window.onload = function () {
                alert("@ViewBag.Message");
                window.location.replace("/Publishers");
            };

        </script>
    }

        <div class="form-horizontal">
            <h4>publisher</h4>
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.pub_id)

            <div class="form-group">
                @Html.LabelFor(model => model.pub_name, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.pub_name, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.pub_name, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.city, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.city, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.city, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.state, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.state, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.state, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.country, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.country, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.country, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.pub_info.pr_info, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.pub_info.pr_info, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                    @Html.ValidationMessageFor(model => model.pub_info.pr_info, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.pub_info.logo, htmlAttributes: new { @class = "control-label col-md-2" })
                @if (Model.pub_info != null && Model.pub_info.logo != null)
                {
                    <img class="img-responsive" src=@Url.Action("Logo","Publishers",new { id = Model.pub_id })>
                }

            </div>
            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    @if (Model.pub_info != null)
                    {
                        <a href=@Url.Action("Edit", "Pub_info", new { pub_id = Model.pub_id })>Edit Publisher's info |</a>
                        <a href=@Url.Action("Delete", "Pub_info", new { pub_id = Model.pub_id })>Delete Publisher's info </a>
                    }
                    else
                    {
                        <a href = @Url.Action("Create", "Pub_info", new { pub_id = Model.pub_id })>Add Publisher's info </a>
                    }
                
                </div>
            </div>
            

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">

                    <input type="submit" value="Save" class="btn btn-default" />

                </div>
            </div>
        </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
